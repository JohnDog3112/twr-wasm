(()=>{var t,e,r,s;let i;class a{sharedArray;buf;constructor(t){if("undefined"!=typeof window&&!crossOriginIsolated&&"file:"!==window.location.protocol)throw Error("twrSharedCircularBuffer constructor, crossOriginIsolated="+crossOriginIsolated+". See SharedArrayBuffer docs.");t?this.sharedArray=t:this.sharedArray=new SharedArrayBuffer(1032),this.buf=new Int32Array(this.sharedArray),this.buf[256]=0,this.buf[257]=0}write(t){let e=this.buf[257];this.buf[e]=t,256==++e&&(e=0),this.buf[257]=e,Atomics.notify(this.buf,257)}read(){if(this.isEmpty())return -1;{let t=this.buf[256],e=this.buf[t];return t++,this.buf[256]=t,e}}readWait(){if(this.isEmpty()){let t=this.buf[256];Atomics.wait(this.buf,257,t)}return this.read()}isEmpty(){return this.buf[256]==this.buf[257]}}(r=t||(t={}))[r.WAITING=0]="WAITING",r[r.SIGNALED=1]="SIGNALED";class o{sharedArray;buf;constructor(e){if("undefined"!=typeof window&&!crossOriginIsolated&&"file:"!==window.location.protocol)throw Error("twrSignal constructor, crossOriginIsolated="+crossOriginIsolated+". See SharedArrayBuffer docs.");e?this.sharedArray=e:this.sharedArray=new SharedArrayBuffer(4),this.buf=new Int32Array(this.sharedArray),this.buf[0]=t.WAITING}signal(){this.buf[0]=t.SIGNALED,Atomics.notify(this.buf,0)}wait(){this.buf[0]==t.WAITING&&Atomics.wait(this.buf,0,t.WAITING)}isSignaled(){return this.buf[0]==t.SIGNALED}reset(){this.buf[0]=t.WAITING}}(s=e||(e={}))[s.D2D_FILLRECT=1]="D2D_FILLRECT",s[s.D2D_FILLCHAR=5]="D2D_FILLCHAR",s[s.D2D_SETLINEWIDTH=10]="D2D_SETLINEWIDTH",s[s.D2D_SETFILLSTYLE=11]="D2D_SETFILLSTYLE",s[s.D2D_SETFONT=12]="D2D_SETFONT",s[s.D2D_BEGINPATH=13]="D2D_BEGINPATH",s[s.D2D_MOVETO=14]="D2D_MOVETO",s[s.D2D_LINETO=15]="D2D_LINETO",s[s.D2D_FILL=16]="D2D_FILL",s[s.D2D_STROKE=17]="D2D_STROKE",s[s.D2D_SETSTROKESTYLE=18]="D2D_SETSTROKESTYLE",s[s.D2D_ARC=19]="D2D_ARC",s[s.D2D_STROKERECT=20]="D2D_STROKERECT",s[s.D2D_FILLTEXT=21]="D2D_FILLTEXT",s[s.D2D_IMAGEDATA=22]="D2D_IMAGEDATA",s[s.D2D_PUTIMAGEDATA=23]="D2D_PUTIMAGEDATA",s[s.D2D_BEZIERTO=24]="D2D_BEZIERTO",s[s.D2D_MEASURETEXT=25]="D2D_MEASURETEXT",s[s.D2D_SAVE=26]="D2D_SAVE",s[s.D2D_RESTORE=27]="D2D_RESTORE",s[s.D2D_CREATERADIALGRADIENT=28]="D2D_CREATERADIALGRADIENT",s[s.D2D_SETCOLORSTOP=29]="D2D_SETCOLORSTOP",s[s.D2D_SETFILLSTYLEGRADIENT=30]="D2D_SETFILLSTYLEGRADIENT",s[s.D2D_RELEASEID=31]="D2D_RELEASEID";class n{canvasKeys;drawCompleteSignal;props;owner;constructor(t,e){let[r,s,i]=t;this.drawCompleteSignal=new o(s),this.canvasKeys=new a(i),this.props=r,this.owner=e}charIn(){return this.canvasKeys.readWait()}inkey(){return this.canvasKeys.isEmpty()?0:this.charIn()}getProp(t){let e=this.owner.getString(t);return this.props[e]}drawSeq(t){this.drawCompleteSignal.reset(),postMessage(["drawseq",[t]]),this.drawCompleteSignal.wait()}}class h{divKeys;constructor(t){let[e]=t;this.divKeys=new a(e)}charIn(){return this.divKeys.readWait()}inkey(){return this.divKeys.isEmpty()?0:this.charIn()}charOut(t){postMessage(["divout",t])}}function l(t){postMessage(["debug",t])}class m{mod;constructor(t){this.mod=t}atod(t){let e=this.mod.getString(t),r=e.trimStart().toUpperCase();return"INF"==r||"+INF"==r?Number.POSITIVE_INFINITY:"-INF"==r?Number.NEGATIVE_INFINITY:Number.parseFloat(e.replaceAll("D","e").replaceAll("d","e"))}dtoa(t,e,r,s){if(-1==s){let s=r.toString();this.mod.copyString(t,e,s)}else{let i=r.toString();i.length>s&&(i=r.toPrecision(s)),this.mod.copyString(t,e,i)}}fcvtS(t,e,r,s,i,a){let o,n;if(0==t||0==a||0==i||e<1)return 1;let h=0;if(Number.isNaN(r))o="1#QNAN00000000000000000000000000000".slice(0,s+1),n=1;else if(Number.isFinite(r)){if(0==r)o="000000000000000000000000000000000000".slice(0,s),n=0;else{if(r<0&&(h=1,r=Math.abs(r)),s>100||r>1e21||r<1e-99)return this.mod.copyString(t,e,""),this.mod.mem32[i]=0,1;let[a="",l=""]=r.toFixed(s).split(".");"0"==a&&(a=""),a.length>0?(n=a.length,o=a+l):n=(o=l.replace(/^0+/,"")).length-l.length}}else o="1#INF00000000000000000000000000000".slice(0,s+1),n=1;return e-1<o.length?1:(this.mod.copyString(t,e,o),this.mod.setLong(i,n),this.mod.setLong(a,h),0)}}class c{memory;mem8;mem32;memD;exports;isWorker=!1;isWasmModule;floatUtil;constructor(t=!1){this.isWasmModule=t,this.mem8=new Uint8Array,this.mem32=new Uint32Array,this.memD=new Float64Array,this.floatUtil=new m(this)}async loadWasm(t){let e;try{e=await fetch(t)}catch(e){throw console.log("loadWasm() failed to fetch: "+t),e}if(!e.ok)throw Error("fetch response error on file '"+t+"'\n"+e.statusText);try{let t=await e.arrayBuffer(),r={...this.modParams.imports},s=await WebAssembly.instantiate(t,{env:r});if(this.exports=s.instance.exports,!this.exports)throw Error("Unexpected error - undefined instance.exports");if(this.memory)throw Error("unexpected error -- this.memory already set");if(this.memory=this.exports.memory,!this.memory)throw Error("Unexpected error - undefined exports.memory");this.mem8=new Uint8Array(this.memory.buffer),this.mem32=new Uint32Array(this.memory.buffer),this.memD=new Float64Array(this.memory.buffer),this.isWorker&&(this.memory.buffer instanceof ArrayBuffer&&console.log("twrWasmModuleAsync requires shared Memory. Add wasm-ld --shared-memory --no-check-features (see docs)"),postMessage(["setmemory",this.memory])),!this.isWasmModule||this.memory.buffer instanceof ArrayBuffer||console.log("twrWasmModule does not require shared Memory. Okay to remove wasm-ld --shared-memory --no-check-features"),this.malloc=t=>new Promise(e=>{let r=this.exports.twr_malloc;e(r(t))}),this.init()}catch(t){throw console.log("WASM instantiate error: "+t+(t.stack?"\n"+t.stack:"")),t}}init(){let t;switch(this.modParams.stdio){case"debug":default:t=0;break;case"div":t=1;break;case"canvas":t=2;break;case"null":t=3}(0,this.exports.twr_wasm_init)(t,this.mem8.length)}async executeC(t){let e=await this.preCallC(t),r=this.executeCImpl(t[0],e);return this.postCallC(e,t),r}async executeCImpl(t,e=[]){if(!this.exports)throw Error("this.exports undefined");if(!this.exports[t])throw Error("executeC: function '"+t+"' not in export table.  Use --export wasm-ld flag.");return(0,this.exports[t])(...e)}async preCallC(t){if(t.constructor!==Array)throw Error("executeC: params must be array, first arg is function name");if(0==t.length)throw Error("executeC: missing function name");let e=[],r=0;for(let s=1;s<t.length;s++){let i=t[s];switch(typeof i){case"number":e[r++]=i;break;case"string":e[r++]=await this.putString(i);break;case"object":if(i instanceof URL){let t=await this.fetchAndPutURL(i);e[r++]=t[0],e[r++]=t[1];break}if(i instanceof ArrayBuffer){let t=await this.putArrayBuffer(i);e[r++]=t;break}default:throw Error("executeC: invalid object type passed in")}}return e}async postCallC(t,e){let r=0;for(let s=1;s<e.length;s++){let i=e[s];switch(typeof i){case"number":r++;break;case"string":this.executeCImpl("twr_free",[t[r]]),r++;break;case"object":if(i instanceof URL){this.executeCImpl("twr_free",[t[r]]),r+=2;break}if(i instanceof ArrayBuffer){let e=new Uint8Array(i);for(let s=0;s<e.length;s++)e[s]=this.mem8[t[r]+s];this.executeCImpl("twr_free",[t[r]]),r++;break}throw Error("postCallC: internal error A");default:throw Error("postCallC: internal error B")}}return t}copyString(t,e,r){let s;for(s=0;s<r.length&&s<e-1;s++)this.mem8[t+s]=r.charCodeAt(s);this.mem8[t+s]=0}async putString(t){let e=await this.malloc(t.length);return this.copyString(e,t.length,t),e}async putU8(t){let e=await this.malloc(t.length);for(let r=0;r<t.length;r++)this.mem8[e+r]=t[r];return e}async putArrayBuffer(t){let e=new Uint8Array(t);return this.putU8(e)}async fetchAndPutURL(t){if(!("object"==typeof t&&t instanceof URL))throw Error("fetchAndPutURL param must be URL");try{let e=await fetch(t),r=await e.arrayBuffer(),s=new Uint8Array(r);return[await this.putU8(s),s.length]}catch(e){throw console.log("fetchAndPutURL Error. URL: "+t+"\n"+e+(e.stack?"\n"+e.stack:"")),e}}getLong(t){let e=Math.floor(t/4);if(4*e!=t)throw Error("getLong passed non long aligned address");if(e<0||e>=this.mem32.length)throw Error("invalid index passed to getLong: "+t+", this.mem32.length: "+this.mem32.length);return this.mem32[e]}setLong(t,e){let r=Math.floor(t/4);if(4*r!=t)throw Error("setLong passed non long aligned address");if(r<0||r>=this.mem32.length)throw Error("invalid index passed to setLong: "+t+", this.mem32.length: "+this.mem32.length);this.mem32[r]=e}getDouble(t){let e=Math.floor(t/8);if(8*e!=t)throw Error("getLong passed non Float64 aligned address");return this.memD[e]}setDouble(t,e){let r=Math.floor(t/8);if(8*r!=t)throw Error("setDouble passed non Float64 aligned address");this.memD[r]=e}getShort(t){if(t<0||t>=this.mem8.length)throw Error("invalid index passed to getShort: "+t);return this.mem8[t]+256*this.mem8[t+1]}getString(t,e){let r="",s=0;for(;this.mem8[t+s]&&(void 0===e||s<e)&&t+s<this.mem8.length;)r+=String.fromCharCode(this.mem8[t+s]),s++;return r}getU8Arr(t){if(t<0||t>=this.mem8.length)throw Error("invalid index passed to getU8: "+t);let e=new Uint32Array(this.mem8.slice(t,t+8).buffer),r=e[0],s=e[1];if(s<0||s>=this.mem8.length)throw Error("invalid idx.dataptr passed to getU8");if(r<0||r>this.mem8.length-s)throw Error("invalid idx.size passed to  getU8");return this.mem8.slice(s,s+r)}getU32Arr(t){if(t<0||t>=this.mem8.length)throw Error("invalid index passed to getU32: "+t);let e=new Uint32Array(this.mem8.slice(t,t+8).buffer),r=e[0],s=e[1];if(s<0||s>=this.mem8.length)throw Error("invalid idx.dataptr passed to getU32");if(r<0||r>this.mem8.length-s)throw Error("invalid idx.size passed to  getU32");if(r%4!=0)throw Error("idx.size is not an integer number of 32 bit words");return new Uint32Array(this.mem8.slice(s,s+r).buffer)}}class d{callCompleteSignal;parameters;constructor(t){this.callCompleteSignal=new o(t[0]),this.parameters=new Uint32Array(t[1])}sleep(t){this.callCompleteSignal.reset(),postMessage(["sleep",[t]]),this.callCompleteSignal.wait()}time(){return this.callCompleteSignal.reset(),postMessage(["time"]),this.callCompleteSignal.wait(),this.parameters[0]}}onmessage=function(t){if("startup"==t.data[0]){let e=t.data[1];(i=new f(e.modParams,e.modWorkerParams)).loadWasm(e.urlToLoad).then(()=>{postMessage(["startupOkay"])}).catch(t=>{console.log(".catch: ",t),postMessage(["startupFail",t])})}else"executeC"==t.data[0]?i.executeCImpl(t.data[1],t.data[2]).then(t=>{postMessage(["executeCOkay",t])}).catch(t=>{console.log("exception in executeC twrworker.js\n"),console.log(t),postMessage(["executeCFail",t])}):console.log("twrworker.js: unknown message: "+t)};class f extends c{malloc;modParams;constructor(t,e){super(),this.isWorker=!0,this.malloc=t=>{throw Error("error - un-init malloc called")},this.modParams=t;let r=new n(e.canvasProxyParams,this),s=new h(e.divProxyParams),i=new d(e.waitingCallsProxyParams);this.modParams.imports={twrDebugLog:l,twrSleep:i.sleep.bind(i),twrTime:i.time.bind(i),twrDivCharOut:s.charOut.bind(s),twrDivCharIn:s.charIn.bind(s),twrCanvasCharIn:r.charIn.bind(r),twrCanvasInkey:r.inkey.bind(r),twrCanvasGetProp:r.getProp.bind(r),twrCanvasDrawSeq:r.drawSeq.bind(r),twrSin:Math.sin,twrCos:Math.cos,twrTan:Math.tan,twrFAbs:Math.abs,twrACos:Math.acos,twrASin:Math.asin,twrATan:Math.atan,twrExp:Math.exp,twrFloor:Math.floor,twrCeil:Math.ceil,twrFMod:function(t,e){return t%e},twrLog:Math.log,twrPow:Math.pow,twrSqrt:Math.sqrt,twrTrunc:Math.trunc,twrDtoa:this.floatUtil.dtoa.bind(this.floatUtil),twrAtod:this.floatUtil.atod.bind(this.floatUtil),twrFcvtS:this.floatUtil.fcvtS.bind(this.floatUtil)}}}})();
//# sourceMappingURL=twrmodworker.a66def00.js.map
